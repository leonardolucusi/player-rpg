{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let DataComponent = class DataComponent {\n  constructor(apiService) {\n    this.apiService = apiService;\n  }\n  ngOnInit() {\n    // When the component initializes, make an HTTP GET request to fetch data from the API\n    this.apiService.getSomeData().subscribe(data => {\n      this.apiData = data; // Store the fetched data in the apiData property\n    }, error => {\n      console.error('Error fetching data from API:', error);\n    });\n  }\n};\nDataComponent = __decorate([Component({\n  selector: 'app-data',\n  template: `\n    <h2>Data from API</h2>\n    <ul>\n      <li *ngFor=\"let item of apiData\">{{ item.name }}</li>\n    </ul>\n  `\n})], DataComponent);","map":{"version":3,"names":["Component","DataComponent","constructor","apiService","ngOnInit","getSomeData","subscribe","data","apiData","error","console","__decorate","selector","template"],"sources":["C:\\Users\\lucus\\OneDrive\\√Årea de Trabalho\\PlayersRPG\\src\\app\\app.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ApiService } from './api.service'; // Import your ApiService\n\n@Component({\n  selector: 'app-data',\n  template: `\n    <h2>Data from API</h2>\n    <ul>\n      <li *ngFor=\"let item of apiData\">{{ item.name }}</li>\n    </ul>\n  `\n})\nexport class DataComponent implements OnInit {\n  apiData: any[]; // This will hold the data fetched from the API\n\n  constructor(private apiService: ApiService) {}\n\n  ngOnInit(): void {\n    // When the component initializes, make an HTTP GET request to fetch data from the API\n    this.apiService.getSomeData().subscribe(\n      (data) => {\n        this.apiData = data; // Store the fetched data in the apiData property\n      },\n      (error) => {\n        console.error('Error fetching data from API:', error);\n      }\n    );\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAY1C,WAAMC,aAAa,GAAnB,MAAMA,aAAa;EAGxBC,YAAoBC,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;EAAe;EAE7CC,QAAQA,CAAA;IACN;IACA,IAAI,CAACD,UAAU,CAACE,WAAW,EAAE,CAACC,SAAS,CACpCC,IAAI,IAAI;MACP,IAAI,CAACC,OAAO,GAAGD,IAAI,CAAC,CAAC;IACvB,CAAC,EACAE,KAAK,IAAI;MACRC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACvD,CAAC,CACF;EACH;CACD;AAhBYR,aAAa,GAAAU,UAAA,EATzBX,SAAS,CAAC;EACTY,QAAQ,EAAE,UAAU;EACpBC,QAAQ,EAAE;;;;;;CAMX,CAAC,C,EACWZ,aAAa,CAgBzB"},"metadata":{},"sourceType":"module","externalDependencies":[]}