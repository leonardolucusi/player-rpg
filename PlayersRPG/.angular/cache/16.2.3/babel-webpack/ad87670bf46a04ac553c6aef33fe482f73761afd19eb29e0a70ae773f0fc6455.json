{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./api-service.service\";\nimport * as i2 from \"@angular/common\";\nfunction AppComponent_li_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(item_r1.level + item_r1.name);\n  }\n}\nexport class AppComponent {\n  constructor(apiService) {\n    this.apiService = apiService;\n  }\n  ngOnInit() {\n    // When the component initializes, make an HTTP GET request to fetch data from the API\n    this.apiService.getSomeData().subscribe(data => {\n      this.apiData = data; // Store the fetched data in the apiData property\n    }, error => {\n      console.error('Error fetching data from API:', error);\n    });\n  }\n}\n_class = AppComponent;\n_class.ɵfac = function AppComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.ApiService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-root\"]],\n  decls: 4,\n  vars: 1,\n  consts: [[4, \"ngFor\", \"ngForOf\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h2\");\n      i0.ɵɵtext(1, \"Data from API\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"ul\");\n      i0.ɵɵtemplate(3, AppComponent_li_3_Template, 2, 1, \"li\", 0);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", ctx.apiData);\n    }\n  },\n  dependencies: [i2.NgForOf],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","item_r1","level","name","AppComponent","constructor","apiService","ngOnInit","getSomeData","subscribe","data","apiData","error","console","ɵɵdirectiveInject","i1","ApiService","selectors","decls","vars","consts","template","AppComponent_Template","rf","ctx","ɵɵtemplate","AppComponent_li_3_Template","ɵɵproperty"],"sources":["C:\\Users\\lucus\\OneDrive\\Área de Trabalho\\PlayersRPG\\src\\app\\app.component.ts","C:\\Users\\lucus\\OneDrive\\Área de Trabalho\\PlayersRPG\\src\\app\\app.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ApiService } from './api-service.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent implements OnInit {\n  apiData?: any[]; // This will hold the data fetched from the API\n\n  constructor(private apiService: ApiService) {}\n\n  ngOnInit(): void {\n    // When the component initializes, make an HTTP GET request to fetch data from the API\n    this.apiService.getSomeData().subscribe(\n      (data) => {\n        this.apiData = data; // Store the fetched data in the apiData property\n      },\n      (error) => {\n        console.error('Error fetching data from API:', error);\n      }\n    );\n  }\n}\n","<h2>Data from API</h2>\n    <ul>\n      <li *ngFor=\"let item of apiData\">{{ item.level + item.name}}</li>\n    </ul>"],"mappings":";;;;;;ICEMA,EAAA,CAAAC,cAAA,SAAiC;IAAAD,EAAA,CAAAE,MAAA,GAA2B;IAAAF,EAAA,CAAAG,YAAA,EAAK;;;;IAAhCH,EAAA,CAAAI,SAAA,GAA2B;IAA3BJ,EAAA,CAAAK,iBAAA,CAAAC,OAAA,CAAAC,KAAA,GAAAD,OAAA,CAAAE,IAAA,CAA2B;;;ADMlE,OAAM,MAAOC,YAAY;EAGvBC,YAAoBC,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;EAAe;EAE7CC,QAAQA,CAAA;IACN;IACA,IAAI,CAACD,UAAU,CAACE,WAAW,EAAE,CAACC,SAAS,CACpCC,IAAI,IAAI;MACP,IAAI,CAACC,OAAO,GAAGD,IAAI,CAAC,CAAC;IACvB,CAAC,EACAE,KAAK,IAAI;MACRC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACvD,CAAC,CACF;EACH;;SAfWR,YAAY;;mBAAZA,MAAY,EAAAT,EAAA,CAAAmB,iBAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;QAAZZ,MAAY;EAAAa,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,sBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCRzB5B,EAAA,CAAAC,cAAA,SAAI;MAAAD,EAAA,CAAAE,MAAA,oBAAa;MAAAF,EAAA,CAAAG,YAAA,EAAK;MAClBH,EAAA,CAAAC,cAAA,SAAI;MACFD,EAAA,CAAA8B,UAAA,IAAAC,0BAAA,gBAAiE;MACnE/B,EAAA,CAAAG,YAAA,EAAK;;;MADkBH,EAAA,CAAAI,SAAA,GAAU;MAAVJ,EAAA,CAAAgC,UAAA,YAAAH,GAAA,CAAAb,OAAA,CAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}